/* {{- $page := .Page }} */
$baseURL: '{{- site.BaseURL}}';
$contentTypeListID: '{{ printf "%v" .ContentTypeListID }}';
$contentType: '{{ .ContentType }}';
$mediaType: '{{ .MediaType }}';
/* File='styles/vitae/hugo-params.scss': hugo.Environment='{{ hugo.Environment }}' .Page='{{ .Page }}' .ContentTypeList='{{ printf "%v" .ContentTypeList }}' .ContentTypeListID='{{ .ContentTypeListID }}' .ContentType='{{ .ContentType }}' .MediaType='{{ .MediaType }}' */

// Target page dimensions for on screen preview and print to PDF
// DIN A4 for Chrome: 794px by 1122px
// NOTE: Even though DIN A4 is 297mm high, Chrome believes its only 794px by 1122px
$printPageWidth: 210.0791667mm;
$printPageHeight: 296.8625mm;

// Page margins
$printPageMarginHorizontal: 25mm;
$printPageMarginVertical: 15mm;
// $printPageMarginVertical: $printPageMarginHorizontal;
// $printPageMarginVertical: math.div($printPageMarginHorizontal * $printPageHeight, $printPageWidth);

$printPageMarginCenterVertical: 0.5;
$printPageMarginCenterHorizontal: 0.5;


{{- $colorPrimaryLit := default "hsl(200, 100%, 50%)" site.Params.colors.colorPrimaryLit }}
{{- $colorPrimaryDim := default "hsl(200, 100%, 50%)" site.Params.colors.colorPrimaryDim }}
{{- $onPrimaryLit := default "hsl(200, 75%, 25%)" site.Params.colors.onPrimaryLit }}
{{- $onPrimaryDim := default "hsl(200, 85%, 85%)" site.Params.colors.onPrimaryDim }}
{{- $surfacePrimaryLit := default "hsl(200, 50%, 95%)" site.Params.colors.surfacePrimaryLit }}
{{- $surfacePrimaryDim := default "hsl(200, 30%, 10%)" site.Params.colors.surfacePrimaryDim }}

{{- $colorSurfaceLit := default "hsl(200, 20%, 98%)" site.Params.colors.colorSurfaceLit }}
{{- $colorSurfaceDim := default "hsl(200, 20%, 10%)" site.Params.colors.colorSurfaceDim }}
{{- $onSurfaceLit := default "hsl(200, 100%, 13%)" site.Params.colors.onSurfaceLit }}
{{- $onSurfaceDim := default "hsl(200, 100%, 95%)" site.Params.colors.onSurfaceDim }}
{{- $colorBackgroundLit := default "hsl(200, 10%, 95%)" site.Params.colors.colorBackgroundLit }}
{{- $colorBackgroundDim := default "hsl(200, 10%, 10%)" site.Params.colors.colorBackgroundDim }}
{{- $onBackgroundLit := default "hsl(200, 10%, 13%)" site.Params.colors.onBackgroundLit }}
{{- $onBackgroundDim := default "hsl(200, 10%, 95%)" site.Params.colors.onBackgroundDim }}

{{- with ($page.Param "colorPrimaryLit") }}
$colorPrimaryLit: {{ . }};
$onPrimaryLit: {{ default "darken(desaturate($colorPrimaryLit, 50%), 25%)" ($page.Param "onPrimaryLit") }};
$surfacePrimaryLit: {{ default "lighten(desaturate($colorPrimaryLit, 50%), 45%)" ($page.Param "surfacePrimaryLit") }};
$colorSurfaceLit: {{ default "lighten(desaturate($colorPrimaryLit, 10%), 48%)" ($page.Param "colorSurfaceLit") }};
$onSurfaceLit: {{ default "darken(desaturate($colorSurfaceLit, 50%), 85%)" ($page.Param "onSurfaceLit") }};
$colorBackgroundLit: {{ default "lighten(desaturate($colorSurfaceLit, 95%), 0%)" ($page.Param "colorBackgroundLit") }};
$onBackgroundLit: {{ default "darken(desaturate($colorBackgroundLit, 50%), 85%)" ($page.Param "onBackgroundLit") }};
{{- else }}
$colorPrimaryLit: {{ $colorPrimaryLit }};
$onPrimaryLit: {{ default $onPrimaryLit ($page.Param "onPrimaryLit") }};
$surfacePrimaryLit: {{ default $surfacePrimaryLit ($page.Param "surfacePrimaryLit") }};
$colorSurfaceLit: {{ default $colorSurfaceLit ($page.Param "colorSurfaceLit") }};
$onSurfaceLit: {{ default $onSurfaceLit ($page.Param "onSurfaceLit") }};
$colorBackgroundLit: {{ default $colorBackgroundLit ($page.Param "colorBackgroundLit") }};
$onBackgroundLit: {{ default $onBackgroundLit ($page.Param "onBackgroundLit") }};
{{- end }}

{{- with ($page.Param "colorPrimaryDim") }}
$colorPrimaryDim: {{ . }};
$onPrimaryDim: {{ default "lighten(desaturate($colorPrimaryDim, 25%), 25%)" ($page.Param "onPrimaryDim") }};
$surfacePrimaryDim: {{ default "darken(desaturate($colorPrimaryDim, 50%), 35%)" ($page.Param "surfacePrimaryDim") }};
$colorSurfaceDim: {{ default "darken(desaturate($colorPrimaryDim, 10%), 40%)" ($page.Param "colorSurfaceDim") }};
$onSurfaceDim: {{ default "lighten(desaturate($colorSurfaceDim, 60%), 35%)" ($page.Param "onSurfaceDim") }};
$colorBackgroundDim: {{ default "darken(desaturate($colorSurfaceDim, 95%), 0%)" ($page.Param "colorBackgroundDim") }};
$onBackgroundDim: {{ default "lighten(desaturate($colorBackgroundDim, 60%), 85%)" ($page.Param "onBackgroundDim") }};
{{- else }}
$colorPrimaryDim: {{ $colorPrimaryDim }};
$onPrimaryDim: {{ default $onPrimaryDim ($page.Param "onPrimaryDim") }};
$surfacePrimaryDim: {{ default $surfacePrimaryDim ($page.Param "surfacePrimaryDim") }};
$colorSurfaceDim: {{ default $colorSurfaceDim ($page.Param "colorSurfaceDim") }};
$onSurfaceDim: {{ default $onSurfaceDim ($page.Param "onSurfaceDim") }};
$colorBackgroundDim: {{ default $colorBackgroundDim ($page.Param "colorBackgroundDim") }};
$onBackgroundDim: {{ default $onBackgroundDim ($page.Param "onBackgroundDim") }};
{{- end }}

$colorSecondaryLit: {{ default "hsl(170, 100%, 50%)" ($page.Param "colorSecondaryLit") }};
$colorSecondaryDim: {{ default "hsl(170, 40%, 15%)" ($page.Param "colorSecondaryDim") }};

$onSecondaryLit: {{ default "darken(desaturate($colorSecondaryLit, 50%), 45%)" ($page.Param "onSecondaryLit") }};
$onSecondaryDim: {{ default "lighten(desaturate($colorSecondaryDim, 60%), 35%)" ($page.Param "onSecondaryDim") }};

$surfaceSecondaryLit: {{ default "lighten(desaturate($colorSecondaryLit, 50%), 45%)" ($page.Param "surfaceSecondaryLit") }};
$surfaceSecondaryDim: {{ default "darken(desaturate($colorSecondaryDim, 60%), 35%)" ($page.Param "surfaceSecondaryDim") }};

$fontFamilySans: '{{ default "Source Sans 3" ($page.Param "fontFamilySans") }}';
$fontFamilySerif: '{{ default "Alegreya" ($page.Param "fontFamilySerif") }}';
$fontFamilyMono: '{{ default "DM Mono" ($page.Param "fontFamilyMono") }}';

$geometricScaleFactor: {{ default "math.pow(2.0, math.div(1, 4) )" ($page.Param "geometricScaleFactor") }};
$fractionalScaleDenominator: {{ default 4 ($page.Param "fractionalScaleDenominator") }};
$fluidScaleDigits: {{ default 2 ($page.Param "fluidScaleDigits") }};

// URL path to directory containing icons, e.g. for color scheme switch.
// The code below ensures that it does not begin with a slash but ends with a slash
$icons: '{{ absURL (printf "%s/" (default "icons/" (strings.TrimLeft "/" (strings.TrimRight "/" site.Params.iconsDir) ) ) ) }}';
// URL path to directory containing images, e.g. for color scheme switch
// The code below ensures that it does not begin with a slash but ends with a slash
$images: '{{ absURL (printf "%s/" (default "images/" (strings.TrimLeft "/" (strings.TrimRight "/" site.Params.imagesDir) ) ) ) }}';


// Adapt to width of screen
// Maximum width for anything the user is supposed
// to interact with (the "page chrome")
$screenViewWidthChrome: {{ default "96rem" ($page.Param "screenViewWidthChrome") }};

// Maximum widht of feature images
$screenViewFeatureImageWidthMax: {{ default "3840px" ($page.Param "screenViewFeatureImageWidthMax") }};

// Padding around body up to narrow breakpoint
$screenViewBodyMarginMobile: {{ default "0rem" ($page.Param "screenViewBodyMarginMobile") }};
// Padding around main elements (header, main, footer) up to narrow breakpoint
$screenViewInnerMarginMobile: {{ default "0.75rem" ($page.Param "screenViewInnerMarginMobile") }};

// Padding around body up to narrow breakpoint
$screenViewBodyPaddingMobile: {{ default "0rem" ($page.Param "screenViewBodyPaddingMobile") }};
// Padding around main elements (header, main, footer) up to narrow breakpoint
$screenViewInnerPaddingMobile: {{ default "0.75rem" ($page.Param "screenViewInnerPaddingMobile") }};

// From this width upward, the mobile menu is hidden
// and the full menu bar is shown
$screenViewBreakpointWidthMobileMenu: {{ default "28rem" ($page.Param "responsive.breakpoints.width.mobileMenu") }};

// From this width upward, more than one content item is shown -
// e.g., a floating image surrounded by text
$screenViewBreakpointWidthMobile: {{ default "20rem" ($page.Param "responsive.breakpoints.width.mobile") }};
// Reset font size to regular size
$screenViewBreakpointWidthNarrow: {{ default "36rem" ($page.Param "responsive.breakpoints.width.narrow") }};

// Fit content to iPad in portrait orientation: 768px = 48rem
$screenViewBreakpointWidthOneColumn: {{ default "48rem" ($page.Param "responsive.breakpoints.width.oneColumn") }};

// Layout with one aside
$screenViewBreakpointWidthTwoColumn: {{ default "60rem" ($page.Param "responsive.breakpoints.width.twoColumn") }};

// Layout with two asides
$screenViewBreakpointWidthWide: {{ default "76rem" ($page.Param "responsive.breakpoints.width.wide") }};

// Layout with two asides and wider sections in main column, e.g., for code or figures
$screenViewBreakpointWidthUltrawide: {{ default "96rem" ($page.Param "responsive.breakpoints.width.ultraWide") }};

// Parameters for layout with one column
// Margin around body up to one-column breakpoint
$screenViewInnerMarginNarrow: {{ default "1rem" ($page.Param "screenViewInnerMarginNarrow") }};
// Margin around main elements (header, main, footer) up to one-column breakpoint
$screenViewBodyMarginNarrow: {{ default "0rem" ($page.Param "screenViewBodyMarginNarrow") }};
// Padding around body up to one-column breakpoint
$screenViewInnerPaddingNarrow: {{ default "1rem" ($page.Param "screenViewInnerPaddingNarrow") }};
// Padding around main elements (header, main, footer) up to one-column breakpoint
$screenViewBodyPaddingNarrow: {{ default "1rem" ($page.Param "screenViewBodyPaddingNarrow") }};

// Margin around body from one-column breakpoint upward
$screenViewInnerMarginOneColumn: {{ default "1.5rem" ($page.Param "screenViewInnerMarginOneColumn") }};
// Margin around main elements (header, main, footer) from one-column breakpoint upward
$screenViewBodyMarginOneColumn: {{ default "0rem" ($page.Param "screenViewBodyMarginOneColumn") }};
// Padding around body from one-column breakpoint upward
$screenViewInnerPaddingOneColumn: {{ default "1.5rem" ($page.Param "screenViewInnerPaddingOneColumn") }};
// Padding around main elements (header, main, footer) from one-column breakpoint upward
$screenViewBodyPaddingOneColumn: {{ default "1rem" ($page.Param "screenViewBodyPaddingOneColumn") }};

$screenViewColumnGap: {{ default "1rem" ($page.Param "screenViewColumnGap") }};

$screenViewWidthAsideMin: {{ default "12rem" ($page.Param "screenViewWidthAsideMin") }};

// Parameters for layout with two columns: main content and one aside
$screenViewColumnWidthMin: ($screenViewBreakpointWidthTwoColumn - 2 * $screenViewBodyPaddingOneColumn - $screenViewWidthAsideMin - $screenViewColumnGap);
// $screenViewColumnWidthMax: (#{$screenViewBreakpointWidthTwoColumn} - 2 * #{$screenViewBodyPaddingOneColumn});
$screenViewColumnWidthMax: ($screenViewBreakpointWidthWide - $screenViewWidthAsideMin - 2 * $screenViewBodyPaddingOneColumn - $screenViewColumnGap);

// // Parameters for layout with three columns: main content and two asides
$screenViewColumnGapWide: {{ default "2rem" ($page.Param "screenViewColumnGapWide") }};
$screenViewColumnWidthWideMax: {{ default "60rem" ($page.Param "screenViewColumnWidthWideMax") }};
$screenViewWidthWideAsideMin: {{ default "12rem" ($page.Param "screenViewWidthWideAsideMin") }};
$screenViewWidthWideAsideMax: {{ default "19rem" ($page.Param "screenViewWidthWideAsideMax") }};
$screenViewColumnWidthWideMin: ($screenViewBreakpointWidthWide - 2 * $screenViewWidthWideAsideMin - 2 * $screenViewBodyPaddingOneColumn - 2 * $screenViewColumnGapWide);

// Parameters for layout with three columns: main content and two asides and wider sections in main column, e.g., for code or figures
$screenViewWidthUltrawide: {{ default "57rem" ($page.Param "screenViewWidthUltrawide") }};

$screenViewBreakpointHeightTall: {{ default "48rem" ($page.Param "screenViewBreakpointHeightTall") }};
$screenViewBreakpointHeightShallow: {{ default "42rem" ($page.Param "screenViewBreakpointHeightShallow") }};

// From this height upward, the footer is layered beneath the main content
// and revealed when scrolling up
$screenViewBreakpointHeightStickyFooter: {{ default "42rem" ($page.Param "screenViewBreakpointHeightStickyFooter") }};
