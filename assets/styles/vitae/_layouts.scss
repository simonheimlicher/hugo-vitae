@use "hugo-vars" as vitae-hugo-vars;
@use "claris/variables" as variables;
@use "vitae/functions" as vitae-functions;

// Styles that define the Vitae layouts
// NOTE: This includes styles for all media types

// Hints:
// https://css-tricks.com/new-year-new-job-lets-make-a-grid-powered-resume/
// Inexplicable empty space on print from Chrome: https://stackoverflow.com/questions/35001518/inexplicable-empty-space-on-print-from-chrome
// Inexplicable margin between elements on print in Chrome, but not in Firefox: https://stackoverflow.com/questions/71550887/inexplicable-margin-between-elements-on-print-in-chrome-but-not-in-firefox
// Reference for @page: https://www.princexml.com/samples/catalog/PrinceCatalogue.html
// https://excessivelyadequate.com/posts/print.html

// Using table footer to have footer repeating on every page:
// https://stackoverflow.com/a/69136303/617559

.vitae {
  --rem_base: 1rem;
  --em_base: 1rem;
  --page_content_width: 100%;

  .view-print {
    --page_scale-factor: 1;

    --page_width_base: #{vitae-hugo-vars.$printPageWidth};
    --page_height_base: #{vitae-hugo-vars.$printPageHeight};
    --page_width: calc(var(--page_width_base));
    --page_height: calc(var(--page_height_base));

    // --page_margin_base_horizontal: #{$printPageMarginHorizontal};
    --page_margin_base_horizontal: var(--root_page_margin_base_horizontal);
    --page_margin_base_center_horizontal: #{vitae-hugo-vars.$printPageMarginCenterHorizontal};

    // --page_margin_base_vertical: #{$printPageMarginVertical};
    --page_margin_base_vertical: var(--root_page_margin_base_vertical);
    --page_margin_base_center_vertical: #{vitae-hugo-vars.$printPageMarginCenterVertical};

    --page_margin_base_left: calc(
      var(--page_margin_base_center_horizontal) * var(--root_page_margin_base_horizontal) * var(--page_margin_base_horizontal) * 2
    );

    --page_margin_base_right: calc(
      (1 - var(--page_margin_base_center_horizontal)) * var(--root_page_margin_base_horizontal) * var(--page_margin_base_horizontal) * 2
    );

    --page_margin_base_top: calc(
      var(--page_margin_base_center_vertical) * var(--root_page_margin_base_vertical) * var(--page_margin_base_vertical) * 2
    );

    --page_margin_base_bottom: calc(
      (1 - var(--page_margin_base_center_vertical)) * var(--root_page_margin_base_vertical) * var(--page_margin_base_vertical) * 2
    );

    --page_margin_left: var(--page_margin_base_left);
    --page_margin_right: var(--page_margin_base_right);
    --page_margin_top: var(--page_margin_base_top);
    --page_margin_bottom: var(--page_margin_base_bottom);

    --page_content_width: calc(var(--page_width) - var(--page_margin_left) - var(--page_margin_right));

    @media screen {
      --page_width: calc(var(--page_width_base) * var(--page_scale-factor));
      --page_height: calc(var(--page_height_base) * var(--page_scale-factor));

      --page_margin_left: calc(var(--page_margin_base_left) * var(--page_scale-factor));
      --page_margin_right: calc(var(--page_margin_base_right) * var(--page_scale-factor));
      --page_margin_top: calc(var(--page_margin_base_top) * var(--page_scale-factor));
      --page_margin_bottom: calc(var(--page_margin_base_bottom) * var(--page_scale-factor));
    }

    .style_ats, .style_ats_true {
      // Disable ligatures as application tracking systems (ATS) are not able to extract text from the PDF
      --font-variant-ligatures: none;
      --font-variant-numeric: normal;

      --font-size_caps_lower: var(--font-size-smaller-2);
      --text-transform_caps_lower: uppercase;
      --font-variant_caps_lower: normal;
      --font-variant_caps_upper: normal;
      // ATS often have trouble to recognize words when spacing is too wide
      // --letter-spacing_caps_lower: 0.075em;
      // --letter-spacing_caps_upper: 0.075em;
      --letter-spacing_caps_lower: 0.025em;
      --letter-spacing_caps_upper: 0.025em;
      --letter-spacing_caps_upper_strong: 0.025em;

      // Disable hyphenation as Applicant Tracking Systems (ATS) does not
      // play well with words spanning multiple lines
      --hyphens: manual;
      font-variant-ligatures: var(--font-variant-ligatures);
      font-variant-numeric: var(--font-variant-numeric);

      // At discretion of browser
      font-kerning: auto;
      hyphens: var(--hyphens);
    }
  }

  #printPreviewContainer {
    display: none;
  }
  &#vitaeContainer {
    &[data-print-preview-visible='true'] {
      #originalContainer {
        display: none;
      }
      #printPreviewContainer {
        display: block;
      }
    }
  }
}
@media screen {
  .vitae {
    .vitae_inner {
      margin: 0 auto;
    }
    .print-preview_inner {
      @include variables.inner_padding_4-2;
      background: var(--print-preview-background);
    }
    #printPreviewContainer {
      // Ensure this element is above footer
      z-index: 1;
      // Ensure that navigation bar on mobile screens remains fixed
      // while print preview scrolls horizontally
      overflow: auto;
    }
    .view-print {
      .vitae_lightbox {
        --screen-page-sep: calc(1.5 * var(--rem));
        display: flex;
        flex-wrap: wrap;
        flex-direction: row;
        justify-content: center;
        min-width: min-content;
        padding: var(--screen-page-sep);
        gap: var(--screen-page-sep);
      }
      .pagination-page {
        position: relative;
        width: var(--page_width);
        margin: 0;
        background: var(--bg);
        overflow: hidden;
        box-shadow: 0.2rem 0.2rem 0.6rem hsla(0, 0%, 50%, 0.5);
      }
      // FIXME: Don't limit page height unless class
      // print-preview_overflow is applied
      // .print-preview_target {
      //   .pagination-page {
      //     height: var(--page_height);
      //   }
      // }
    }
    .print-preview_inner {
      // FIXME: Ensure 'main' element covers entire 'body' when two pages are shown horizontally
      width: 100%;
    }
  }
}
@media print {
  .vitae {
    --bg: var(--print-bg);

    // Disable browser adjustment of low-contrast elements in print mode.
    -webkit-print-color-adjust: exact;  /* Chrome/Safari/Edge/Opera */
    color-adjust: exact;  /* Firefox */

    .pagination-page {
      padding: 0mm;
      margin: 0mm;
      background: var(--bg);
      // width: 210mm // PrinceXML
      // height: 297mm // PrinceXML
      // page-break-before: always // PrinceXML
      width: var(--page_width);
      height: var(--page_height);
      // PrinceXML
      page-break-before: auto;
      // PrinceXML
      position: relative;
      // PrinceXML
      overflow: hidden;
    }
    @page {
      padding: 0mm;
      margin: 0mm;
      size: A4 portrait;
    }
  }
  body {
    // background: white
    margin: 0mm;
  }
  main #printPreviewContainer {
    display: none;
  }
}

@mixin full-bleed_column($vertical: none, $horizontal: none) {
  $margin_top: 0;
  $margin_right: 0;
  $margin_bottom: 0;
  $margin_left: 0;

  @if $vertical == 'top' {
    $margin_top: calc(-1 * var(--page_margin_top));
  }  @else if $vertical == 'bottom' {
    $margin_bottom: calc(-1 * var(--page_margin_bottom));
  }

  @if $horizontal == 'right' {
    $margin_right: calc(-1 * var(--page_margin_right));
    $margin_left: calc(-1 * var(--column-padding-left));
  }  @else if $horizontal == 'left' {
    $margin_right: calc(-1 * var(--column-padding-right));
    $margin_left: calc(-1 * var(--page_margin_left));
  }

  margin: $margin_top $margin_right $margin_bottom $margin_left;
}

@mixin full-bleed_page($vertical: none, $horizontal: none, $padding: false) {
  $margin_top: 0;
  $margin_right: 0;
  $margin_bottom: 0;
  $margin_left: 0;

  @if $vertical == 'top' {
    $margin_top: var(--page_margin_top);
  }  @else if $vertical == 'bottom' {
    $margin_bottom: var(--page_margin_bottom);
  }  @else if $vertical == 'both' {
    $margin_top: var(--page_margin_top);
    $margin_bottom: var(--page_margin_bottom);
  }

  @if $horizontal == 'right' {
    $margin_right: var(--page_margin_right);
  }  @else if $horizontal == 'left' {
    $margin_left: var(--page_margin_left);
  }  @else if $horizontal == 'both' {
    $margin_right: var(--page_margin_right);
    $margin_left: var(--page_margin_left);
  }

  margin: calc(-1 * $margin_top) calc(-1 * $margin_right) calc(-1 * $margin_bottom) calc(-1 * $margin_left);
  @if $padding {
    padding: $margin_top $margin_right $margin_bottom $margin_left;
  }
}

@mixin property-scale($prop-spec) {
  $base-suffix: '_base';
  $factor-suffix: '_scale-factor';
  $initial: 1;
  $target: '.view-print';
  $scaled-media: 'all';
  $base: null;

  @each $prop-key, $prop-values in $prop-spec {
    $factor: #{$prop-key}#{$factor-suffix};
    --#{$factor}: #{$initial};
    @if type-of($prop-values) == 'map' {
      @each $p, $v in $prop-values {
        $p-value-name: #{$prop-key}_#{$p};
        $p-base: #{$p-value-name}#{$base-suffix};
        @if $base {
          #{$base} {
            --#{$p-base}: #{$v};
            --#{$p-value-name}: var(--#{$p-base});
          }
        }
        @else {
          --#{$p-base}: #{$v};
          --#{$p-value-name}: var(--#{$p-base});
        }
      }
    }
    @else {
      $p-value-name: #{$prop-key};
      $v: #{$prop-values};
      $p-base: #{$p-value-name}#{$base-suffix};
      @if $base {
        #{$base} {
          --#{$p-base}: #{$v};
          --#{$p-value-name}: var(--#{$p-base});
        }
      }
      @else {
        --#{$p-base}: #{$v};
        --#{$p-value-name}: var(--#{$p-base});
      }
    }

    #{$target} {
      @if $scaled-media == 'all' {
        @if type-of($prop-values) == 'map' {
          @each $p, $v in $prop-values {
            $p-value-name: #{$prop-key}_#{$p};
            $p-base: #{$p-value-name}#{$base-suffix};
            --#{$p-base}: #{$v};
            --#{$p-value-name}: calc( var(--#{$p-base}) * var(--#{$factor}) );
          }
        }
        @else {
          $p-value-name: #{$prop-key};
          $v: #{$prop-values};
          $p-base: #{$p-value-name}#{$base-suffix};
          --#{$p-base}: #{$v};
          --#{$p-value-name}: calc( var(--#{$p-base}) * var(--#{$factor}) );
        }
      }
      @else {
        @if type-of($prop-values) == 'map' {
          @each $p, $v in $prop-values {
            $p-value-name: #{$prop-key}_#{$p};
            $p-base: #{$p-value-name}#{$base-suffix};
            --#{$p-value-name}: var(--#{$p-base});
          }
        }
        @else {
          $p-value-name: #{$prop-key};
          $v: #{$prop-values};
          $p-base: #{$p-value-name}#{$base-suffix};
          --#{$p-value-name}: var(--#{$p-base});
        }
        @media #{$scaled-media} {
          @if type-of($prop-values) == 'map' {
            @each $p, $v in $prop-values {
              $p-value-name: #{$prop-key}_#{$p};
              $p-base: #{$p-value-name}#{$base-suffix};
              --#{$p-base}: #{$v};
              --#{$p-value-name}: calc( var(--#{$p-base}) * var(--#{$factor}) );
            }
          }
          @else {
            $p-value-name: #{$prop-key};
            $v: #{$prop-values};
            $p-base: #{$p-value-name}#{$base-suffix};
            --#{$p-base}: #{$v};
            --#{$p-value-name}: calc( var(--#{$p-base}) * var(--#{$factor}) );
          }
        }
      }
    }
  }
}

.vitae {
  --rem: var(--rem_base);

  --root_em: 10pt;
  --root_page_margin_base_horizontal: 25mm;
  --root_page_margin_base_vertical: 15mm;
  --root_list-style_item_padding_between: var(--inner_padding_4-1);

  --em: var(--em_base);
  @include vitae-functions.font-size-scale(var(--em));

  .view-print {
    --rem_base: #{vitae-hugo-vars.$baseFontSize};

    --rem: var(--rem_base);
    --em: var(--root_em) * var(--em_base);

    @media screen {
      --rem: calc(var(--rem_base) * var(--page_scale-factor));
      --em: calc(var(--root_em) * var(--em_base) * var(--page_scale-factor));
      @include vitae-functions.font-size-scale(var(--em));
    }

    // FIXME: Important to have a value greater than 0 as otherwise, bullets
    // won't be visible when printing from Chrome to PDF
    --list-style_list_margin_left: var(--inner_margin_4-2);
    --list-style_list_padding_left: 0;
    --list-style_item_margin_between: 0;
    --list-style_item_padding_between: var(--root_list-style_item_padding_between);
    @include variables.list-style_indented(
      var(--list-style_list_margin_left), var(--list-style_list_padding_left),
      var(--list-style_item_margin_between), var(--list-style_item_padding_between));
  }

  $props: (
    'inner_margin': calc(1.8 * var(--rem)),
    'inner_padding': calc(1.2 * var(--rem)),
    'line-width': (
      'normal': calc(0.0625 * var(--rem)),
      'wider-1': calc(0.125 * var(--rem)),
      'wider-2': calc(0.25 * var(--rem)),
    )
  );

  @include property-scale($props);
  @include vitae-functions.inner_margin_padding(var(--inner_margin), var(--inner_padding));
  @include vitae-functions.inner_margin_padding(var(--inner_margin), var(--inner_padding), 8, 1);

  // --column_gap: var(--inner_margin_4-3);
  // Row gap is provided by section-title in most templates
  // --row_gap: var(--inner_margin_4-0);

  --line-width_separator: calc(0.025 * var(--rem));;
  --line-width_separator_heading: calc(0.05 * var(--rem));;

  --column_gap: var(--inner_margin_4-3);
  --row_gap: var(--inner_margin_4-1);
  --section-gap_vertical: var(--inner_margin_4-4);

  .view-print {
    @include vitae-functions.font-size-scale(var(--em));
    @include vitae-functions.inner_margin_padding(var(--inner_margin), var(--inner_padding));
    @include vitae-functions.inner_margin_padding(var(--inner_margin), var(--inner_padding), 8, 1);
    --column_gap: var(--inner_margin_4-3);
    --row_gap: var(--inner_margin_4-1);
    --slot-gap_vertical: var(--inner_margin_4-8);
    --section-gap_vertical: var(--inner_margin_4-4);
  }

  --border-color: var(--text);
  // --border-color-faint: var(--text-color-faint);

  .view-print {
    @include variables.link-lvhfa-inherit;

    .pagination-page {
      padding: var(--page_margin_top) var(--page_margin_right) var(--page_margin_bottom) var(--page_margin_left);
      display: flex;
      flex-direction: column;
      justify-content: space-between;

      &.footer_name-page-number {
        --footer_margin_left: calc( var(--page_margin_base_left) * var(--page_scale-factor));
        --footer_margin_right: calc( var(--page_margin_base_right) * var(--page_scale-factor));
        --footer_margin_bottom: calc(var(--page_margin_base_bottom) / 2 * var(--page_scale-factor));

        --page_margin_bottom: calc(0.5 * var(--page_margin_base_bottom) * var(--page_scale-factor));
      }
      .footer_name-page-number {
        margin: var(--inner_padding_4-6) 0 0 0;
        padding: var(--inner_padding_4-1) 0 0 0;
        border-top: calc(var(--line-width_separator)) solid var(--border-color-faint);
        display: flex;
        flex-direction: column;
        align-items: baseline;
        justify-content: flex-end;
      }
    }

    .pagination-container {
      position: relative;
      padding: 0;
      overflow: visible;
      & > h2, & > h3, & > div {
        &:first-child {
          & {
            --margin_organization_between: 0px;
            --margin_organization_first: 0px;
            --margin_role_between: 0px;
            --margin_role_first: 0px;
            margin-top: 0;
            padding-top: 0;
          }
        }
      }
      h1, h2, h3, h4, h5, h6 {
        &.component_first {
          margin-top: 0;
          @include vitae-functions.flush-top-heading;
        }
      }
      .component_first {
        margin-top: 0;
        h1, h2, h3, h4, h5, h6 {
          &:first-of-type {
            margin-top: 0;
            @include vitae-functions.flush-top-heading;
          }
        }
        & > p:first-of-type,
        & > li:first-of-type,
        & > dl:first-of-type {
          margin-top: 0;
          @include vitae-functions.flush-top;
        }
      }
    }
    .pagination-page {
      position: relative;
      margin-bottom: auto;

      /* ----- Layout RESUME ------ */
      &.main-aside-primary {
        --row-gap: calc(2.0 * var(--column-padding-v));
        --column-gap: calc(2.0 * var(--column-padding-h));
        --column-padding-left: calc(var(--column-padding-h));
        --column-padding-right: calc(var(--column-padding-h));

        --aside-width: calc(var(--page_width) / 4);

        .main-column {
          background: var(--bg);
          --border-color-faint: var(--theme-xxhaze);
        }
        .header,
        .main-header,
        .aside-primary {
          --border-color-faint: var(--theme-xxhaze);
        }
        &::before {
          content: "";
          position: absolute;
          top: 0;
          bottom: 0;
          left: 0;
          width: calc(var(--page_margin_left) + var(--aside-width) + var(--column-gap) / 2);
          background-color: var(--theme-haze);
          z-index: 0;
        }
        &::after {
          content: "";
          position: absolute;
          top: 0;
          right: 0;
          bottom: 0;
          left: 0;
          background: var(--bg);
          z-index: -1;
        }
        display: grid;
        grid-template-rows: minmax(min-content, max-content) 1fr;
        row-gap: var(--row-gap);
        grid-template-columns: var(--aside-width) auto;
        column-gap: var(--column-gap);
        align-items: start;
        .header {
          grid-column: 1;
          grid-row: 1;
        }
        .aside-primary {
          grid-column: 1;
          grid-row: 2;
        }
        .main-column {
          grid-column: 2;
          grid-row: 1 / span 2;
        }
        .section + .section {
          margin-top: var(--row-gap);
        }
      }
    }
    .header,
    .main-header,
    .main-column,
    .aside-header,
    .aside-primary,
    .aside-secondary {
      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        &.component_first {
          margin-top: 0;
          @include vitae-functions.flush-top-heading;
        }
      }
      .component_first {
        margin-top: 0;
        h1,
        h2,
        h3,
        h4,
        h5,
        h6 {
          &:first-of-type {
            margin-top: 0;
            @include vitae-functions.flush-top-heading;
          }
        }
        & > p:first-of-type,
        & > li:first-of-type {
          margin-top: 0;
          @include vitae-functions.flush-top;
        }
      }
    }
  }
}

// Constrain height of page to enable pagination
.vitae[data-print-preview-status="readyToRender"], .vitae[data-print-preview-status="done"] {
  .pagination-page {
    // background-color: whitesmoke;
    height: var(--page_height);
    // overflow: hidden;
    .pagination-container[data-pagination-policy="break"] {
      overflow: hidden;
      height: 100%;
    }
  }
}

// Adapt layout after pagination
.vitae[data-print-preview-status="done"] {
  &.layout-template .view-print .pagination-page {
    // .pagination-container[data-pagination-policy="break"] {
    // FIXME: Explicit slot gaps don't work well with pagination
    // .slot-gap_vertical {
    //   .slot_content ~ & {
    //     outline-color: blue;
    //     min-height: var(--slot-gap_vertical);
    //     flex: 10 1 auto;
    //   }
    //   & + .slot_chrome {
    //     outline: 1px solid rgba(255, 0, 0, 1);
    //     min-height: 0px;
    //     height: 0px;
    //     flex: 0;
    //   }
    // }
    .section-gap_vertical:not(:first-child) {
      // outline-color: pink;
      // min-height: var(--section-gap_vertical);
      flex: 5 1 auto;
    }
    // .section-gap_vertical:not(:has(+ .section, +.section-panel)) {
    //   outline-color: orange;
    // }
    .pagination-container:last-child .section-gap_vertical:last-child {
      display: none;
    }
    .pagination-container {
      &.slot_main {
        height: 100%;
      }
      // FIXME: Do not allow flex of stage_header to avoid issues with timeline
      .stage_header {
        flex: 0 0 auto;
        // 2023-07-29: Seems to be okay for timeline: column
        &.style_timeline_column {
          flex: 1 0 auto;
        }
      }
      // .stage_header:has( + .stage_header) {
      //   flex: 0.25 0 auto;
      // }
      // .stage_header:has( + .stage_meta) {
      //   flex: 0 0 auto;
      // }
      // .organization_header:has( + .role_header) {
      //   flex: 0 0 auto;
      // }
      .stage_meta, .stage_content {
        flex: 0.5 0.5 auto;
      }
      .stage_content.component_last {
        flex: 0;
      }
    }
  }
  &.layout-resume {
    .view-print {
      .pagination-page {
        .pagination-container {
          display: flex;
          flex-direction: column;
          flex-wrap: nowrap;
          justify-content: space-between;
          // & > *
          //   flex: 0 1 auto
          // & > .timeline
          //   flex: 0.5 1 auto
          // .organization-header
          //   flex: 0.25 0 auto
          .role-header {
            flex: 1 0 auto;
          }
          .organization-header + .role-header {
            flex: 0.5 0 auto;
          }
          .role-section-heading {
            flex: 1 0 auto;
          }            // .role-header:has(+ .role-section-heading)
          //   flex: 0 0 auto
          .role-header + .role-section-heading {
            flex: 0.25 0 auto;
          }
          .stage_content {
            flex: 0.25 0 auto;
          }
          .stage_content {
            flex: 0.25 0 auto;
          }
        }
      }
      .page-first:not(.page-last) {
        grid-template-rows: auto;
        .pagination-container {
          height: 100%;
        }
        .aside-primary,
        .aside-secondary {
          & > * {
            flex: 0 1 auto;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
          }
        }
      }
      .page-last {
        &.pagination-page.main-aside-primary {
          // Only allow one row
          grid-template-rows: 1fr;
          .header {
            display: none;
          }
          .aside-primary {
            grid-row: 1;
          }
          .main-column {
            grid-row: 1;
            height: 100%;
          }
          .aside-primary,
          .aside-secondary {
            // & > *
            //   flex: 0 1 auto
            //   height: 100%
            //   display: flex
            //   flex-direction: column
            //   justify-content: flex-end
            height: 100%;
          }
        }
      }
    }
  }
}

// Adapt layout after pagination
.vitae,
.vitae[data-print-preview-status="done"] {
  &.layout-letter {
    --font-size-heading-organization: calc(2.5 * var(--rem));;
    --organization-logo-width: calc(3 * var(--rem));;
    .view-print {
      .pagination-page.main-aside-primary {
        grid-template-rows: minmax(min-content, max-content) 1fr;
        grid-template-columns: var(--aside-width) auto;
        gap: var(--row-gap) var(--column-gap);
        align-items: start;
        .aside-header {
          grid-row: 1 / span 2;
          grid-column: 1;
        }
        .aside-primary {
          grid-column: 1;
          grid-row: 3;
        }
        .main-header {
          grid-column: 2;
          grid-row: 1;
        }
        .main-column {
          grid-column: 2;
          grid-row: 2 / span 2;
        }
        --font-size-h1: 2.4em;
        .main-header {
          grid-column: 2;
          grid-row: 1;
          // background: var(--theme-xhaze)
          display: flex;
          flex-direction: row;
          gap: var(--row-gap) var(--column-gap);
          align-items: center;
          flex-wrap: wrap;
          justify-content: space-between;
          .selflink-item {
            margin-left: auto;
          }
        }
        .aside-header,
        .aside-primary {
          display: flex;
          gap: var(--row-gap) var(--column-gap);
          flex-direction: column;
          background: var(--theme-haze);
        }
        .aside-header {
          .about {
            display: flex;
            gap: var(--row-gap) var(--column-gap);
            flex-direction: column;
            width: 100%;
            max-width: 25em;
            margin: 0 auto;
            .name {
              text-align: left;
            }
            .selflink {
              display: flex;
              flex-direction: row;
              gap: var(--column-padding-v) var(--column-padding-h);
              align-items: center;
              flex-wrap: nowrap;
              justify-content: space-between;
            }
          }
        }
        .organization {
          &-header {
            display: flex;
            flex-direction: row;
            justify-content: flex-start;
            align-items: center;
            flex: 0;
            gap: 0.5em;
            min-height: var(--organization-logo-width);
            break-after: avoid;
            margin: 0;
            padding: 0;
          }
          &-logo {
            align-self: center;
          }
          &-title {
            margin: 0;
            padding: 0;
            @include vitae-functions.flush-top-heading;
          }
        }
        .role-header {
          position: relative;
          display: flex;
          align-items: center;
          justify-content: flex-end;
          flex: 0 1 auto;
          margin-left: auto;
          width: auto;
          text-align: right;
          padding: 0;
          break-after: avoid;
          .role-title {
            font-weight: var(--font-weight-strong);
            margin: 0;
            padding: 0;
            @include vitae-functions.flush-top-heading;
          }
        }
      }
    }
  }
}

// Adapt layout after pagination
.vitae[data-print-preview-status="done"] {
  &.layout-letter {
    .view-print {
      .main-column,
      .aside-primary,
      .aside-secondary {
        display: flex;
        flex-direction: column;
        flex-wrap: nowrap;
        justify-content: space-between;
        & > * {
          flex: 0 1 auto;
        }
        & > .timeline {
          flex: 0.5 1 auto;
        }
      }
      .page-first.page-last {
        grid-template-rows: auto;
        .main-column,
        .aside-primary,
        .aside-secondary {
          height: 100%;
        }
      }
      .page-first:not(.page-last) {
        grid-template-rows: auto;
        .main-column,
        .aside-primary,
        .aside-secondary {
          height: 100%;
        }
        .aside-primary,
        .aside-secondary {
          & > * {
            flex: 0 1 auto;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
          }
        }
      }
      .page-last:not(.page-first) {
        &.pagination-page.main-aside-primary {
          // Only allow one row
          grid-template-rows: 1fr;
          .main-header {
            display: none;
          }
          .aside-primary {
            grid-row: 1;
          }
          .main-column {
            grid-row: 1;
          }
          .aside-primary,
          .aside-secondary {            // & > *
            //   flex: 0 1 auto
            //   height: 100%
            //   display: flex
            //   flex-direction: column
            //   justify-content: flex-end
            height: 100%;
          }
        }
      }
    }
  }
}
